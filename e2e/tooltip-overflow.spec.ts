/*
    #364 Label bounds calculates in wrong way
    https://github.com/kerssdead/charts/issues/364
 */

import { expect, test } from '@playwright/test'
import { Screenshot } from './utils/Screenshot'
import { BrowserResult } from './utils/BrowserResult'
import { Utils } from './utils/Utils'
import * as Constants from 'static/constants/Index'

test('Regular tooltip should not overflow canvas', async ({ page, browserName }) => {
    await Utils.goto(page)

    const valuesCount = page.locator('#values-count'),
        chartType = page.locator('#chart-type'),
        treePadding = page.locator('#tree-padding'),
        disableInitAnimation = page.locator('#init-animation'),
        tooltip = page.locator('#tooltip')

    await disableInitAnimation.setChecked(true)
    await tooltip.setChecked(true)
    await valuesCount.fill('1')
    await chartType.selectOption('3')
    await treePadding.fill('0')

    const chart = page.locator('#chart')

    await chart.scrollIntoViewIfNeeded()

    await page.mouse.move(760, 710)

    await page.waitForTimeout(Constants.Animations.tooltip * 3)

    const frame = await Screenshot.get(page, {
        x: 579,
        y: 688,
        width: 150,
        height: 32
    })

    const result: BrowserResult = {
        chromium: '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',
        firefox: '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',
        webkit: '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'
    }

    expect(frame).toBe(result[browserName])
})