/*
    #367 X-axis labels overlap each other
    https://github.com/kerssdead/charts/issues/367
 */

import { test } from '@playwright/test'
import { Utils } from './utils/Utils'
import Settings from './utils/Settings'
import { ChartType, PlotAxisType, PlotType } from '../src/static/Enums'

test('Label should not overlap each other', async ({ page, browserName }) => {
    await Utils.setup(page, browserName)

    await Settings.valuesCount(5)
    await Settings.chartType(ChartType.Plot)
    await Settings.plotType(PlotType.Bar)
    await Settings.xAxisType(PlotAxisType.Text)

    await Utils.checkScreenshot({
            x: 24,
            y: 672,
            width: 256,
            height: 20
        },
        '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')
})