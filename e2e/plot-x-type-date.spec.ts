/*
    #342 First date in plot x-axis is Invalid date
    https://github.com/kerssdead/charts/issues/342
 */

import { test } from '@playwright/test'
import { Utils } from './utils/Utils'
import Settings from './utils/Settings'
import { ChartType, PlotAxisType } from '../src/static/Enums'

test('Plot with x-axis types is date first date shouldn`t be "Invalid Date"', async ({ page, browserName }) => {
    await Utils.setup(page, browserName)

    await Settings.enableLegend()
    await Settings.enableTitle()
    await Settings.chartType(ChartType.Plot)
    await Settings.xAxisType(PlotAxisType.Date)

    await Utils.checkScreenshot({
            x: 53,
            y: 627,
            width: 80,
            height: 22
        },
        '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')
})