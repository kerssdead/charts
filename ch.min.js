class OHelper{static adjustColor(color,amount){return"#"+color.replace(/^#/,"").replace(/../g,color=>("0"+Math.min(255,Math.max(0,parseInt(color,16)+amount)).toString(16)).slice(-2))}static grayScale(color){return"#"+Array(4).join(Math.round([.3,.59,.11].reduce((a,v,i)=>a+v*parseInt(color[2*i+1]+color[2*i+2],16),0)/3).toString(16).padStart(2,"0"))}static randomColor(){let letters="0123456789ABCDEF",color="#";for(let i=0;i<6;i++)color+=letters[Math.floor(Math.random()*16)];return color}static stringWidth(str,font){const widths=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.2796875,.2765625,.3546875,.5546875,.5546875,.8890625,.665625,.190625,.3328125,.3328125,.3890625,.5828125,.2765625,.3328125,.2765625,.3015625,.5546875,.5546875,.5546875,.5546875,.5546875,.5546875,.5546875,.5546875,.5546875,.5546875,.2765625,.2765625,.584375,.5828125,.584375,.5546875,1.0140625,.665625,.665625,.721875,.721875,.665625,.609375,.7765625,.721875,.2765625,.5,.665625,.5546875,.8328125,.721875,.7765625,.665625,.7765625,.721875,.665625,.609375,.721875,.665625,.94375,.665625,.665625,.609375,.2765625,.3546875,.2765625,.4765625,.5546875,.3328125,.5546875,.5546875,.5,.5546875,.5546875,.2765625,.5546875,.5546875,.221875,.240625,.5,.221875,.8328125,.5546875,.5546875,.5546875,.5546875,.3328125,.5,.2765625,.5546875,.5,.721875,.5,.5,.5,.3546875,.259375,.353125,.5890625];const avg=.5279276315789471;return Array.from(str).reduce((acc,cur)=>acc+(widths[cur.charCodeAt(0)]??avg),0)*(font||14)}static guid(){const S4=()=>((1+Math.random())*65536|0).toString(16).substring(1);return(S4()+S4()+"-"+S4()+"-4"+S4().substr(0,3)+"-"+S4()+"-"+S4()+S4()+S4()).toLowerCase()}}const OChartTypes=Object.freeze({plot:0,circular:1,gauge:2});const OCircularTypes=Object.freeze({pie:0,donut:1});const OAnimationTypes=Object.freeze({mouseover:0,mouseleave:1,init:2,click:3});const OLegendPlaces=Object.freeze({bottom:0,left:1,top:2,right:3});class ODynSettings{renderer;constructor(chart,settings){switch(settings.type){case OChartTypes.plot:this.renderer=new OPlotRenderer(chart,settings,this);break;case OChartTypes.circular:this.renderer=new OCircularRenderer(chart,settings,this);break;case OChartTypes.gauge:this.renderer=new OGaugeRenderer(chart,settings,this);break}}}class OChartSettings{data;type;width;height;baseColor;title;enableLegend;enableTooltip;enableOther;legendPlace}class OChartProperties{static chart="chart"}class OBasePoint{id;color;label;disabled}class OData{values;type}class ORenderer{node;canvas;settings;dynSettings;chart;animations;constructor(chart,settings,dynSettings){this.node=chart.node;this.settings=settings;this.dynSettings=dynSettings;this.chart=chart;this.animations=new OAnimations;this.canvas=document.createElement("canvas");this.canvas.width=chart.settings.width;this.canvas.height=chart.settings.height;if(settings.enableLegend){if(settings.legendPlace===OLegendPlaces.top||settings.legendPlace===OLegendPlaces.bottom)this.canvas.height-=200;if(settings.legendPlace===OLegendPlaces.left||settings.legendPlace===OLegendPlaces.right)this.canvas.width-=500}this.node.append(this.canvas)}render(){const ctx=this.canvas.getContext("2d",{willReadFrequently:true});ctx.clearRect(0,0,this.canvas.width,this.canvas.height);if(this.settings.title){ctx.beginPath();ctx.shadowBlur=null;ctx.fillStyle="#000000";ctx.textAlign="center";ctx.textBaseline="top";ctx.font="20px serif";ctx.fillText(this.settings.title,this.canvas.width/2,30);ctx.closePath()}}destroy(){throw new Error("Method not implemented")}}class OCircularRenderer extends ORenderer{#isInit=false;#canvasPosition;#center;#radius;#sum;#accumulator;#onMouseMoveEvent;#onClickEvent;#startAngle;#currentHover;#isHover;#pinned;#angles;data;#startPoint;#dropdown;constructor(chart,settings,dynSettings){super(chart,settings,dynSettings);this.data=this.chart.data;if(settings.enableOther&&chart.data.values.length>20){const sum=chart.data.values.splice(20).reduce((acc,v)=>acc+v.current,0);chart.data.values=chart.data.values.slice(0,20);chart.data.values.push({value:sum,current:sum,label:"Other",id:OHelper.guid(),color:"#a3a3a3",innerRadius:this.data.innerRadius})}for(const value of this.data.values){value.current=value.value;value.innerRadius??=this.data.type===OCircularTypes.donut?this.data.innerRadius??50:0}this.#dropdown=new ODropdown(this.chart,this.canvas,{x:this.canvas.width-10,y:10,text:"Menu",items:[{text:"Export PNG",action:()=>{const ctx=this.canvas.getContext("2d",{willReadFrequently:true});ctx.clearRect(this.#center.x+this.#radius,0,this.canvas.width,this.canvas.height);let destinationCanvas=document.createElement("canvas");destinationCanvas.width=this.canvas.width;destinationCanvas.height=this.canvas.height;let destCtx=destinationCanvas.getContext("2d");destCtx.fillStyle="#FFFFFF";destCtx.fillRect(0,0,this.canvas.width,this.canvas.height);destCtx.drawImage(this.canvas,0,0);let download=document.createElement("a");download.href=destinationCanvas.toDataURL("image/png");download.download=this.settings.title;download.click()}}]})}render(){super.render();if(!this.#isInit){const shortSide=this.canvas.width>this.canvas.height?this.canvas.height:this.canvas.width;this.#center={x:this.canvas.width/2,y:this.canvas.height/2};this.#startAngle=Math.random()%(Math.PI*2);this.#radius=shortSide/3;this.#pinned=[];this.#initAnimations()}this.#accumulator=this.#startAngle;this.#isHover=false;this.canvas.style.cursor="default";if(this.data.values.filter(v=>!v.disabled).length===0)this.#drawEmpty();else this.#draw();if(!this.#isInit)this.canvas.dispatchEvent(new MouseEvent("mousemove"));this.#onClickEvent=this.#dropdown.render(this.#onMouseMoveEvent,this.#onClickEvent);this.#isInit=true}#draw(){if(this.animations.any()||this.#onMouseMoveEvent||!!this.#isInit===false){this.#sum=this.data.values.reduce((acc,v)=>acc+v.current,0);let anglesSum=this.#startAngle;this.#angles=this.data.values.flatMap(sector=>{const angle=sector.current/this.#sum*2*Math.PI;return{id:sector.id,value:angle,sum:(anglesSum+=angle)-angle}}).reverse();this.#startPoint={x:this.#center.x+this.#radius*Math.cos(this.#startAngle),y:this.#center.y+this.#radius*Math.sin(this.#startAngle)};for(const value of this.data.values)this.#drawSector(value);if(this.#onMouseMoveEvent)for(const value of this.data.values)this.#drawTooltip(value);this.#drawInnerTitle()}requestAnimationFrame(this.render.bind(this))}#drawSector(value,isInner=false){const ctx=this.canvas.getContext("2d",{willReadFrequently:true});const piece=value.current/this.#sum,angle=(isNaN(piece)?1:piece)*2*Math.PI;const isSingle=this.data.values.filter(s=>!s.disabled).length===1;ctx.fillStyle=value.color;ctx.shadowBlur=null;ctx.shadowColor=null;if(!isInner&&value.current>0){let labelStartPoint={x:this.#center.x+(this.#radius+25)*Math.cos(this.#accumulator+angle/2),y:this.#center.y+(this.#radius+25)*Math.sin(this.#accumulator+angle/2)};let labelMidPoint={x:this.#center.x+(this.#radius+35)*Math.cos(this.#accumulator+angle/2),y:this.#center.y+(this.#radius+35)*Math.sin(this.#accumulator+angle/2)};const dir=labelStartPoint.x>this.#center.x?1:-1;let endPoint={x:labelMidPoint.x+10*dir,y:labelMidPoint.y};let isBusy=false;const textWidth=OHelper.stringWidth(value.label),imageDataX=dir===1?endPoint.x+8:endPoint.x-textWidth-8,imageData=new Uint32Array(ctx.getImageData(imageDataX,endPoint.y-12,textWidth,24).data.buffer);if(imageDataX<0||imageDataX+textWidth>this.canvas.width||endPoint.y-12<0||endPoint.y+12>this.canvas.height)isBusy=true;if(!isBusy)for(let i=0;i<imageData.length;i++)if(imageData[i]&4278190080){isBusy=true;break}if(!isBusy){ctx.beginPath();ctx.moveTo(labelStartPoint.x,labelStartPoint.y);ctx.quadraticCurveTo(labelMidPoint.x,labelMidPoint.y,endPoint.x,endPoint.y);ctx.strokeStyle="#000000";ctx.stroke();let opacity=Math.round(255*(value.current/value.value)).toString(16);if(opacity.length<2)opacity=0+opacity;ctx.fillStyle="#000000"+opacity;ctx.textAlign=dir===1?"start":"end";ctx.textBaseline="alphabetic";ctx.font="14px serif";ctx.fillText(value.label,endPoint.x+8*dir,endPoint.y+4)}}let point2={x:this.#center.x+this.#radius*Math.cos(this.#accumulator+angle),y:this.#center.y+this.#radius*Math.sin(this.#accumulator+angle)};if(!isInner&&(!this.#isInit||this.animations.contains(value,OAnimationTypes.init))){this.animations.add(value,OAnimationTypes.init,{timer:new Date,duration:125+(this.chart.data.values.indexOf(value)+1)/this.chart.data.values.length*175,before:(item,passed,duration)=>{return passed<=duration},body:(passed,duration)=>{if(passed>duration)passed=duration;const transition=passed/duration;const centerOfSector={x:this.#center.x+this.#radius/2*Math.cos(this.#accumulator+angle/2),y:this.#center.y+this.#radius/2*Math.sin(this.#accumulator+angle/2)};const minSize=.7,rest=1-minSize;ctx.translate(centerOfSector.x-centerOfSector.x*(minSize+transition*rest),centerOfSector.y-centerOfSector.y*(minSize+transition*rest));ctx.scale(minSize+transition*rest,minSize+transition*rest);let opacity=Math.round(255*transition).toString(16);if(opacity.length<2)opacity=0+opacity;this.#drawSector({value:value.value,current:value.current,color:value.color+opacity,label:value.label,id:value.id,disabled:value.disabled,innerRadius:value.innerRadius},true);ctx.resetTransform()}})}if(!!this.#onClickEvent&&!isInner&&!this.animations.contains(value,OAnimationTypes.init)&&!isSingle){this.animations.add(value,OAnimationTypes.click,{timer:null,duration:100,before:()=>{if(!!this.#onClickEvent){if(this.#isInsideSector(this.#onClickEvent,value)){if(this.#pinned.includes(value.id))this.#pinned=this.#pinned.filter(id=>id!==value.id);else this.#pinned.push(value.id);this.#onClickEvent=new PointerEvent("click")}}},body:()=>{if(!this.#pinned.includes(value.id))return;let direction=this.#accumulator+angle/2;const transition={x:20*Math.cos(direction),y:20*Math.sin(direction)};ctx.translate(transition.x,transition.y);this.#drawSector(value,true);ctx.resetTransform()}})}if(this.#onMouseMoveEvent&&this.#isInsideSector(this.#onMouseMoveEvent,value)){this.#currentHover=value.id;this.#isHover=true}if(this.#onMouseMoveEvent&&!isInner&&!this.animations.contains(value,OAnimationTypes.init)&&!this.#pinned.includes(value.id)&&!isSingle){this.animations.add(value,OAnimationTypes.mouseleave,{timer:null,duration:100,before:()=>{return!this.#isInsideSector(this.#onMouseMoveEvent,value)},body:(passed,duration)=>{let direction=this.#accumulator+angle/2;if(passed>duration||this.#currentHover===undefined)passed=duration;const transition={x:20*Math.cos(direction)*(1-passed/duration),y:20*Math.sin(direction)*(1-passed/duration)};ctx.translate(transition.x,transition.y);value.transition=transition;this.#drawSector({value:value.value,current:value.current,color:OHelper.adjustColor(value.color,Math.round(33*(1-passed/duration))),label:value.label,id:value.id,disabled:value.disabled,innerRadius:value.innerRadius},true);ctx.resetTransform()}});this.animations.add(value,OAnimationTypes.mouseover,{timer:null,duration:100,before:()=>{return this.#isInsideSector(this.#onMouseMoveEvent,value)},body:(passed,duration)=>{const actualPiece=value.current/this.#sum,actualAngle=(isNaN(actualPiece)?1:actualPiece)*2*Math.PI;this.animations.reload(value,OAnimationTypes.mouseleave);this.canvas.style.cursor="pointer";let direction=this.#accumulator+actualAngle/2;if(passed>duration)passed=duration;const transition={x:20*Math.cos(direction)*(passed/duration),y:20*Math.sin(direction)*(passed/duration)};ctx.translate(transition.x,transition.y);value.transition=transition;this.#drawSector({value:value.value,current:value.current,color:OHelper.adjustColor(value.color,Math.round(33*passed/duration)),label:value.label,id:value.id,disabled:value.disabled,innerRadius:value.innerRadius},true);ctx.resetTransform()}})}if((isInner||isSingle&&!this.animations.contains(value,OAnimationTypes.init))&&angle>0){ctx.beginPath();if(this.chart.data.type===OCircularTypes.pie)ctx.moveTo(this.#center.x,this.#center.y);ctx.lineTo(this.#startPoint.x,this.#startPoint.y);let localAccumulator=0,localAngle=angle;while(localAngle>0){let currentAngle=localAngle-Math.PI/6>0?Math.PI/6:localAngle;point2={x:this.#center.x+this.#radius*Math.cos(this.#accumulator+localAccumulator+currentAngle),y:this.#center.y+this.#radius*Math.sin(this.#accumulator+localAccumulator+currentAngle)};const tangentIntersectionAngle=Math.PI-currentAngle;const lengthToTangentIntersection=this.#radius/Math.sin(tangentIntersectionAngle/2);const tangentIntersectionPoint={x:this.#center.x+lengthToTangentIntersection*Math.cos(this.#accumulator+localAccumulator+currentAngle/2),y:this.#center.y+lengthToTangentIntersection*Math.sin(this.#accumulator+localAccumulator+currentAngle/2)};ctx.quadraticCurveTo(tangentIntersectionPoint.x,tangentIntersectionPoint.y,point2.x,point2.y);localAccumulator+=currentAngle;localAngle-=Math.PI/6}if(this.chart.data.type===OCircularTypes.donut||value.innerRadius!==0){const innerRadius=this.#radius*(value.innerRadius/100);const innerPoint2={x:point2.x-(this.#radius-innerRadius)*(point2.x-this.#center.x)/this.#radius,y:point2.y-(this.#radius-innerRadius)*(point2.y-this.#center.y)/this.#radius};ctx.lineTo(innerPoint2.x,innerPoint2.y);localAngle=0;localAccumulator=angle;while(localAngle<angle){let currentAngle=localAngle+Math.PI/6<angle?Math.PI/6:angle-localAngle;point2={x:this.#center.x+innerRadius*Math.cos(this.#accumulator+localAccumulator-currentAngle),y:this.#center.y+innerRadius*Math.sin(this.#accumulator+localAccumulator-currentAngle)};const tangentIntersectionAngle=Math.PI-currentAngle;const lengthToTangentIntersection=innerRadius/Math.sin(tangentIntersectionAngle/2);const tangentIntersectionPoint={x:this.#center.x+lengthToTangentIntersection*Math.cos(this.#accumulator+localAccumulator-currentAngle/2),y:this.#center.y+lengthToTangentIntersection*Math.sin(this.#accumulator+localAccumulator-currentAngle/2)};ctx.quadraticCurveTo(tangentIntersectionPoint.x,tangentIntersectionPoint.y,point2.x,point2.y);localAccumulator-=currentAngle;localAngle+=Math.PI/6}}ctx.closePath();ctx.fillStyle=value.color;ctx.strokeStyle=value.color;ctx.fill();ctx.stroke();this.#accumulator+=angle}this.#startPoint=point2}#drawTooltip(value){if(!this.chart.settings.enableTooltip)return;const ctx=this.canvas.getContext("2d",{willReadFrequently:true});let x=this.#onMouseMoveEvent.clientX-this.#canvasPosition.x,y=this.#onMouseMoveEvent.clientY-this.#canvasPosition.y+window.scrollY;if(this.#currentHover===value.id&&this.#isHover){const text=`${value.label}: ${value.current.toPrecision(2)}`;ctx.beginPath();ctx.roundRect(x+=10,y+=10,OHelper.stringWidth(text)+16,34,20);ctx.fillStyle="#00000077";ctx.shadowColor="#00000077";ctx.shadowBlur=20;ctx.fill();ctx.fillStyle="#ffffff";ctx.font="14px serif";ctx.textAlign="start";ctx.fillText(text,x+12,y+22)}}#initAnimations(){this.#canvasPosition=this.canvas.getBoundingClientRect();this.#canvasPosition.x+=window.scrollX;this.#canvasPosition.y+=window.scrollY;this.canvas.onmousemove=event=>this.#onMouseMoveEvent=event;this.canvas.onclick=event=>this.#onClickEvent=event}#isInsideSector(event,value){const isAngle=point=>{let a=Math.atan2(point.y-this.#center.y,point.x-this.#center.x);if(a<0)a+=Math.PI*2;if(a<this.#startAngle)a=Math.PI*2-Math.abs(this.#startAngle-a)+this.#startAngle;let index=this.#angles.findIndex(o=>o.id===value.id);let sumBefore=this.#angles[index].sum;return sumBefore<=a&&sumBefore+this.#angles[index].value-a>=0};const isWithinRadius=v=>{return v.x*v.x+v.y*v.y<=this.#radius*this.#radius&&(this.data.type!==OCircularTypes.donut||v.x*v.x+v.y*v.y>=this.#radius*(value.innerRadius/100)*this.#radius*(value.innerRadius/100))};let x=event.clientX-this.#canvasPosition.x+window.scrollX,y=event.clientY-this.#canvasPosition.y+window.scrollY;let point={x:x,y:y};const inner={x:point.x-this.#center.x,y:point.y-this.#center.y},outer={x:point.x-this.#center.x-value.transition?.x,y:point.y-this.#center.y-value.transition?.y};return isAngle(point)&&(isWithinRadius(inner)||isWithinRadius(outer))}#drawEmpty(){const ctx=this.canvas.getContext("2d",{willReadFrequently:true});ctx.clearRect(0,0,this.#canvasPosition.width,this.#canvasPosition.height);ctx.closePath();ctx.beginPath();ctx.arc(this.#center.x,this.#center.y,this.#radius,0,2*Math.PI);ctx.strokeStyle="#000000";ctx.stroke();ctx.font="14px serif";ctx.textAlign="center";ctx.textBaseline="middle";ctx.fillStyle="#000000";ctx.fillText("All data is hidden",this.#center.x,this.#center.y);requestAnimationFrame(this.render.bind(this))}#drawInnerTitle(){if(this.data.innerTitle){const ctx=this.canvas.getContext("2d",{willReadFrequently:true});ctx.beginPath();ctx.fillStyle="#000000";ctx.font="16px serif";ctx.textAlign="center";ctx.textBaseline="middle";ctx.fillText(this.data.innerTitle,this.#center.x,this.#center.y);ctx.closePath()}}destroy(){super.destroy()}}class OPlotRenderer extends ORenderer{}class OGaugeRenderer extends ORenderer{data;#radius;#center;#dropdown;#canvasPosition;#onMouseMoveEvent;#onClickEvent;#isInit;constructor(chart,settings,dynSettings){super(chart,settings,dynSettings);this.data=chart.data;if(settings.enableOther&&chart.data.values.length>20){const sum=chart.data.values.splice(20).reduce((acc,v)=>acc+v.current,0);chart.data.values=chart.data.values.slice(0,20);chart.data.values.push({value:sum,current:sum,label:"Other",id:OHelper.guid(),color:"#a3a3a3",innerRadius:this.data.innerRadius})}this.#radius=this.canvas.width>this.canvas.height?this.canvas.width/3:this.canvas.height/3;this.#dropdown=new ODropdown(this.chart,this.canvas,{x:this.canvas.width-10,y:10,text:"Menu",items:[{text:"Export PNG",action:()=>{const ctx=this.canvas.getContext("2d",{willReadFrequently:true});ctx.clearRect(this.#center.x+this.#radius,0,this.canvas.width,this.canvas.height);let destinationCanvas=document.createElement("canvas");destinationCanvas.width=this.canvas.width;destinationCanvas.height=this.canvas.height;let destCtx=destinationCanvas.getContext("2d");destCtx.fillStyle="#FFFFFF";destCtx.fillRect(0,0,this.canvas.width,this.canvas.height);destCtx.drawImage(this.canvas,0,0);let download=document.createElement("a");download.href=destinationCanvas.toDataURL("image/png");download.download=this.settings.title;download.click()}}]});this.#center={x:this.canvas.width/2,y:this.canvas.height-this.#radius/3};this.animations=new OAnimations;this.#initAnimations()}render(){super.render();this.#draw();if(this.#onMouseMoveEvent)this.#drawTooltip(this.data.values[0]);this.#onClickEvent=this.#dropdown.render(this.#onMouseMoveEvent,this.#onClickEvent);requestAnimationFrame(this.render.bind(this));this.#isInit=true}#draw(){const ctx=this.canvas.getContext("2d",{willReadFrequently:true});const value=this.data.values[0];if(!this.#isInit||this.animations.contains(value,OAnimationTypes.init))this.animations.add({id:value.id},OAnimationTypes.init,{timer:null,duration:450,before:()=>{return true},body:(passed,duration)=>{if(passed>duration)passed=duration;value.current=value.value*(passed/duration);if(passed===duration)this.animations.delete({id:value.id},OAnimationTypes.init)}});ctx.beginPath();ctx.strokeStyle="#0288d1";ctx.lineCap="round";ctx.lineWidth=40;const piece=value.current/this.data.max,angle=(isNaN(piece)?1:piece)*Math.PI;let startPoint={x:this.#center.x+this.#radius*Math.cos(Math.PI),y:this.#center.y+this.#radius*Math.sin(Math.PI)};ctx.lineTo(startPoint.x,startPoint.y);let localAccumulator=0,localAngle=angle;while(localAngle>0){let currentAngle=localAngle-Math.PI/6>0?Math.PI/6:localAngle;let point2={x:this.#center.x+this.#radius*Math.cos(Math.PI+localAccumulator+currentAngle),y:this.#center.y+this.#radius*Math.sin(Math.PI+localAccumulator+currentAngle)};const tangentIntersectionAngle=Math.PI-currentAngle;const lengthToTangentIntersection=this.#radius/Math.sin(tangentIntersectionAngle/2);const tangentIntersectionPoint={x:this.#center.x+lengthToTangentIntersection*Math.cos(Math.PI+localAccumulator+currentAngle/2),y:this.#center.y+lengthToTangentIntersection*Math.sin(Math.PI+localAccumulator+currentAngle/2)};ctx.quadraticCurveTo(tangentIntersectionPoint.x,tangentIntersectionPoint.y,point2.x,point2.y);localAccumulator+=currentAngle;localAngle-=Math.PI/6}ctx.stroke();ctx.closePath();ctx.beginPath();ctx.lineWidth=1;ctx.lineCap="square";localAccumulator=0;localAngle=Math.PI;while(localAngle>=0){let currentAngle=localAngle-Math.PI/10>0?Math.PI/10:localAngle;let point3={x:this.#center.x+(this.#radius+50)*Math.cos(Math.PI+localAccumulator),y:this.#center.y+(this.#radius+50)*Math.sin(Math.PI+localAccumulator)};let point4={x:this.#center.x+(this.#radius+90)*Math.cos(Math.PI+localAccumulator),y:this.#center.y+(this.#radius+90)*Math.sin(Math.PI+localAccumulator)};let point5={x:this.#center.x+(this.#radius+115)*Math.cos(Math.PI+localAccumulator),y:this.#center.y+(this.#radius+115)*Math.sin(Math.PI+localAccumulator)};const opacity=Math.PI-localAngle>angle?"66":"ff";ctx.moveTo(point3.x,point3.y);ctx.lineTo(point4.x,point4.y);ctx.strokeStyle="#000000"+opacity;ctx.stroke();ctx.textAlign="center";ctx.textBaseline="middle";ctx.fillStyle="#000000"+opacity;ctx.fillText((100-localAngle/Math.PI*100).toString(),point5.x,point5.y);localAccumulator+=currentAngle;localAngle-=Math.PI/10}}#drawTooltip(value){if(!this.chart.settings.enableTooltip)return;if(this.#isInsideSector(this.#onMouseMoveEvent,value)){const ctx=this.canvas.getContext("2d",{willReadFrequently:true});let x=this.#onMouseMoveEvent.clientX-this.#canvasPosition.x,y=this.#onMouseMoveEvent.clientY-this.#canvasPosition.y+window.scrollY;const text=`${value.label}: ${value.current.toPrecision(2)}`;ctx.beginPath();ctx.roundRect(x+=12,y+=10,OHelper.stringWidth(text)+16,34,20);ctx.fillStyle="#00000077";ctx.shadowColor="#00000077";ctx.shadowBlur=20;ctx.fill();ctx.fillStyle="#ffffff";ctx.font="14px serif";ctx.textAlign="start";ctx.textBaseline="middle";ctx.fillText(text,x+10,y+18)}}#isInsideSector(event,value){const isAngle=point=>{let a=Math.atan2(point.y-this.#center.y,point.x-this.#center.x);if(a<0)a+=Math.PI*2;const piece=value.current/this.data.max,angle=(isNaN(piece)?1:piece)*Math.PI;return Math.PI+angle>=a};const isWithinRadius=v=>{const outerRadius=this.#radius+20,innerRadius=this.#radius-20;return v.x*v.x+v.y*v.y<=outerRadius*outerRadius&&v.x*v.x+v.y*v.y>=innerRadius*innerRadius};let x=event.clientX-this.#canvasPosition.x+window.scrollX,y=event.clientY-this.#canvasPosition.y+window.scrollY;let point={x:x,y:y};const inner={x:point.x-this.#center.x,y:point.y-this.#center.y};return isAngle(point)&&isWithinRadius(inner)}#initAnimations(){this.#canvasPosition=this.canvas.getBoundingClientRect();this.#canvasPosition.x+=window.scrollX;this.#canvasPosition.y+=window.scrollY;this.canvas.onmousemove=event=>this.#onMouseMoveEvent=event;this.canvas.onclick=event=>this.#onClickEvent=event}}class OSector extends OBasePoint{value;current;transition;innerRadius}class OPoint{x;y}class OCircularData extends OData{type;innerRadius;innerTitle;values}class OGaugeData extends OData{min;max}class OLegend{canvas;chart;animations;#canvasPosition;#onMouseMoveEvent;#onClickEvent;#globalTimer;#isInit=false;#dropdown;constructor(chart,context){this.chart=chart;this.canvas=document.createElement("canvas");this.canvas.width=1600;this.canvas.height=200;this.canvas.style.width="fit-content";switch(chart.settings.legendPlace){case OLegendPlaces.bottom:this.canvas.width=this.chart.settings.width>this.chart.settings.height?this.chart.settings.height:this.chart.settings.width;context.style.flexDirection="column";break;case OLegendPlaces.top:this.canvas.width=this.chart.settings.width>this.chart.settings.height?this.chart.settings.height:this.chart.settings.width;context.style.flexDirection="column-reverse";break;case OLegendPlaces.left:this.canvas.width=500;context.style.flexDirection="row";break;case OLegendPlaces.right:this.canvas.width=500;context.style.flexDirection="row-reverse";break}chart.node.append(this.canvas);this.#globalTimer=new Date;this.animations=new OAnimations;this.#dropdown=new ODropdown(this.chart,this.canvas,{x:this.canvas.width-110,y:10,text:"Menu",items:[{text:"Reset",action:()=>{for(let value of this.chart.data.values)value.disabled=false}}]})}render(){if(!this.#isInit)this.#initInteractions();const ctx=this.canvas.getContext("2d",{willReadFrequently:true});ctx.clearRect(0,0,this.canvas.width,this.canvas.height);let nextPoint={x:20,y:20};this.canvas.style.cursor="default";for(const value of this.chart.data.values)nextPoint=this.#draw(value,nextPoint.x,nextPoint.y);requestAnimationFrame(this.render.bind(this));if(!this.#isInit)this.canvas.dispatchEvent(new MouseEvent("mousemove"));const isCursorPointer=this.canvas.style.cursor==="pointer";this.#onClickEvent=this.#dropdown.render(this.#onMouseMoveEvent,this.#onClickEvent);if(isCursorPointer)this.canvas.style.cursor="pointer";this.#isInit=true}#draw(value,x,y){const ctx=this.canvas.getContext("2d",{willReadFrequently:true});const textWidth=OHelper.stringWidth(value.label),circleRadius=10;if(x+50+textWidth>=this.canvas.width-100){x=20;y+=38}let rectX=x-circleRadius-circleRadius,rectY=y-circleRadius/2-circleRadius,rectW=circleRadius+circleRadius+20+textWidth,rectH=circleRadius+circleRadius+circleRadius;const isHover=event=>{const px=event.clientX-this.#canvasPosition.x+window.scrollX,py=event.clientY-this.#canvasPosition.y+window.scrollY;return px>=rectX&&px<=rectX+rectW&&py>=rectY&&py<=rectY+rectH&&!this.#dropdown.isActive};if((this.#onClickEvent||value.current===0&&!value.disabled)&&!this.#dropdown.isActive){this.animations.add(value,OAnimationTypes.click,{timer:null,duration:220,continuous:true,before:()=>{return value.current===0&&!value.disabled||isHover(this.#onClickEvent)&&value.value!==0},body:(passed,duration)=>{if(passed>duration)passed=duration;if(passed===0&&this.#onClickEvent)value.disabled=!value.disabled;if(value.disabled)value.current=value.value*(1-passed/duration);else value.current=value.value*passed/duration;if(passed===duration)this.#onClickEvent=new PointerEvent("click")}})}if(this.#onMouseMoveEvent&&!this.#dropdown.isActive){if(isHover(this.#onMouseMoveEvent))this.canvas.style.cursor="pointer";this.animations.add(value,OAnimationTypes.mouseleave,{timer:null,duration:100,before:()=>{return!isHover(this.#onMouseMoveEvent)&&!this.#isInit},body:(passed,duration)=>{if(passed>duration)passed=duration;ctx.beginPath();ctx.roundRect(rectX,rectY,rectW,rectH,circleRadius);ctx.fillStyle=OHelper.adjustColor("#ffffff",Math.round(-50*(1-passed/duration)));ctx.fill()}});this.animations.add(value,OAnimationTypes.mouseover,{timer:null,duration:100,before:()=>{return isHover(this.#onMouseMoveEvent)},body:(passed,duration)=>{if(passed>duration)passed=duration;ctx.beginPath();ctx.roundRect(rectX,rectY,rectW,rectH,circleRadius);ctx.fillStyle=OHelper.adjustColor("#ffffff",Math.round(-50*passed/duration));ctx.fill()}})}ctx.beginPath();ctx.arc(x,y,circleRadius,0,2*Math.PI);ctx.fillStyle=value.disabled?OHelper.grayScale(value.color):value.color;ctx.fill();ctx.fillStyle="#000000";ctx.font="14px serif";ctx.textAlign="start";ctx.textBaseline="alphabetic";ctx.fillText(value.label,x+=20,y+4);if(value.disabled){ctx.beginPath();ctx.moveTo(x-5,y);ctx.lineTo(x+textWidth,y);ctx.stroke()}x+=textWidth+45;return{x:x,y:y}}#initInteractions(){this.#canvasPosition=this.canvas.getBoundingClientRect();this.#canvasPosition.x+=window.scrollX;this.#canvasPosition.y+=window.scrollY;this.canvas.onmousemove=event=>this.#onMouseMoveEvent=event;this.canvas.onclick=event=>this.#onClickEvent=event}destroy(){throw new Error("Method not implemented")}}class OChart{node;data;settings;#dynSettings;#legend;constructor(context,settings){context[OChartProperties.chart]=this;this.node=context;this.node.style.display="flex";this.node.style.flexDirection="column";this.node.style.alignItems="center";this.data=settings.data;this.settings=settings;this.#prepareSettings();this.#dynSettings=new ODynSettings(this,this.settings);if(this.settings.enableLegend)this.#legend=new OLegend(this,context)}render(){this.#dynSettings.renderer.render();this.#legend?.render()}destroy(){}#prepareSettings(){const baseColor=this.settings.baseColor??OHelper.randomColor();let adjustStep=Math.round(100/this.settings.data.values.length),adjustAmount=-50;if(adjustStep<=1)adjustStep=1;for(let item of this.settings.data.values){item.id=OHelper.guid();item.color??=OHelper.adjustColor(baseColor,adjustAmount+=adjustStep);item.disabled=!item.value;item.value??=0}if(this.settings.data.values.filter(v=>v.value<0)){for(const item of this.settings.data.values.filter(v=>v.value<0))console.warn(`"${item.name}" has negative value (${item.value}) and will not be render`);this.settings.data.values=this.settings.data.values.filter(v=>v.value>=0)}const dimension=this.node.parentNode.getBoundingClientRect();if(!this.settings.width||+this.settings.width===0)this.settings.width=dimension.width;if(!this.settings.height||+this.settings.height===0)this.settings.height=dimension.height;this.settings.legendPlace??=OLegendPlaces.bottom}}class OAnimationItem{timer;before;body;duration;inProgress;continuous}class OAnimations{#queue;constructor(){this.#queue=new Map}add(object,type,value){const key=this.#getKey(object,type);if(!this.#queue.has(key))this.#queue.set(key,value);this.#process(key)}delete(object,type){this.#queue.delete(this.#getKey(object,type))}contains(object,type){return this.#queue.has(this.#getKey(object,type))}any(){return this.#queue.size>0}reload(object,type){if(this.contains(object,type)){let item=this.#queue.get(this.#getKey(object,type));item.timer=new Date}}#process(key){let item=this.#queue.get(key);const stamp=new Date,passed=stamp-(item.timer??stamp);const before=item.before(item,passed,item.duration)??true;if(!item.timer&&before)item.timer=new Date;if(before||item.inProgress&&item.continuous){item.body(passed,item.duration);item.inProgress=true}if(passed>=item.duration&&(!before||item.continuous)){this.#queue.delete(key);item.inProgress=false}}#getKey(object,type){return object.id+type}}class ODropdownItem{text;action}class ODropdownOptions{items;x;y;text}class ODropdown{#chart;#canvas;#options;#canvasPosition;animations;isActive=false;constructor(chart,canvas,options){this.#chart=chart;this.#canvas=canvas;this.#options=options;this.animations=new OAnimations;this.#initAnimations()}render(moveEvent,clickEvent){let ctx=this.#canvas.getContext("2d",{willReadFrequently:true});const width=OHelper.stringWidth(this.#options.text)+20,height=24;ctx.beginPath();let x=this.#options.x+width>this.#canvas.width?this.#canvas.width-width:this.#options.x,y=this.#options.y+height>this.#canvas.height?this.#canvas.height-height:this.#options.y;const isOnButton=this.#isOnButton(moveEvent,x,y,width,height);if(isOnButton){this.#canvas.style.cursor="pointer";if(clickEvent){this.isActive=!this.isActive;clickEvent=undefined}this.animations.add({id:"animation-dropdown"},OAnimationTypes.mouseover,{timer:null,duration:300,before:()=>{return clickEvent===undefined},body:(passed,duration)=>{this.animations.reload({id:"animation-dropdown"},OAnimationTypes.mouseleave);if(passed>duration)passed=duration;ctx.fillStyle=OHelper.adjustColor("#ffffff",60-Math.round(passed/duration*100))}})}else{this.#canvas.style.cursor="default";this.animations.add({id:"animation-dropdown"},OAnimationTypes.mouseleave,{timer:null,duration:300,before:()=>{return true},body:(passed,duration)=>{this.animations.reload({id:"animation-dropdown"},OAnimationTypes.mouseover);if(passed>duration)passed=duration;ctx.fillStyle=OHelper.adjustColor("#ffffff",60-Math.round(100-passed/duration*100))}})}ctx.shadowBlur=null;ctx.roundRect(x,y,width,height,4);ctx.fill();ctx.fillStyle="#000000";ctx.textAlign="center";ctx.textBaseline="middle";ctx.font="14px serif";ctx.fillText(this.#options.text,x+width/2,y+height/2);ctx.closePath();if(this.isActive){y+=height;let maxWidth=Math.max(this.#options.items.map(value=>OHelper.stringWidth(value.text)))+8;if(maxWidth<50)maxWidth=50;ctx.beginPath();ctx.roundRect(x,y,maxWidth,this.#options.items.length*20+8,4);ctx.fillStyle="#ffffff";ctx.fill();ctx.stroke();ctx.closePath();ctx.beginPath();y+=4;for(const item of this.#options.items){if(this.#isOnButton(moveEvent,x,y,maxWidth,20)){this.animations.add({id:"animation-dropdown"+item.text},OAnimationTypes.mouseover,{timer:null,duration:300,before:()=>{return clickEvent===undefined},body:(passed,duration)=>{this.animations.reload({id:"animation-dropdown"+item.text},OAnimationTypes.mouseleave);if(passed>duration)passed=duration;ctx.fillStyle=OHelper.adjustColor("#ffffff",60-Math.round(passed/duration*100))}});this.#canvas.style.cursor="pointer";if(clickEvent){item.action();clickEvent=undefined;this.isActive=false}}else{this.animations.add({id:"animation-dropdown"+item.text},OAnimationTypes.mouseleave,{timer:null,duration:300,before:()=>{return true},body:(passed,duration)=>{this.animations.reload({id:"animation-dropdown"},OAnimationTypes.mouseover);if(passed>duration)passed=duration;ctx.fillStyle=OHelper.adjustColor("#ffffff",60-Math.round(100-passed/duration*100))}})}ctx.rect(x,y,maxWidth,20);ctx.fill();ctx.fillStyle="#000000";ctx.textAlign="center";ctx.textBaseline="hanging";ctx.fillText(item.text,x+maxWidth/2,y+4);y+=20}ctx.closePath();ctx.fillStyle="#000000"}if(clickEvent!==undefined&&this.isActive){this.isActive=false;clickEvent=undefined}return clickEvent}#initAnimations(){this.#canvasPosition=this.#canvas.getBoundingClientRect();this.#canvasPosition.x+=window.scrollX;this.#canvasPosition.y+=window.scrollY}#isOnButton(event,x,y,w,h){if(!event)return false;let trueX=event.clientX-this.#canvasPosition.x+window.scrollX,trueY=event.clientY-this.#canvasPosition.y+window.scrollY;return trueX>=x&&trueX<=x+w&&trueY>=y&&trueY<=y+h}}