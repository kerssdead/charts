String.prototype.hashCode=function(){let hash=0,i,chr;if(this.length===0)return hash;for(i=0;i<this.length;i++){chr=this.charCodeAt(i);hash=(hash<<5)-hash+chr;hash|=0}return hash};Object.prototype.hashCode=function(){return JSON.stringify(this).hashCode()};function adjustColor(color,amount){return"#"+color.replace(/^#/,"").replace(/../g,color=>("0"+Math.min(255,Math.max(0,parseInt(color,16)+amount)).toString(16)).slice(-2))}function grayScale(color){return"#"+Array(4).join(Math.round([.3,.59,.11].reduce((a,v,i)=>a+v*parseInt(color[2*i+1]+color[2*i+2],16),0)/3).toString(16).padStart(2,"0"))}const widths=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.2796875,.2765625,.3546875,.5546875,.5546875,.8890625,.665625,.190625,.3328125,.3328125,.3890625,.5828125,.2765625,.3328125,.2765625,.3015625,.5546875,.5546875,.5546875,.5546875,.5546875,.5546875,.5546875,.5546875,.5546875,.5546875,.2765625,.2765625,.584375,.5828125,.584375,.5546875,1.0140625,.665625,.665625,.721875,.721875,.665625,.609375,.7765625,.721875,.2765625,.5,.665625,.5546875,.8328125,.721875,.7765625,.665625,.7765625,.721875,.665625,.609375,.721875,.665625,.94375,.665625,.665625,.609375,.2765625,.3546875,.2765625,.4765625,.5546875,.3328125,.5546875,.5546875,.5,.5546875,.5546875,.2765625,.5546875,.5546875,.221875,.240625,.5,.221875,.8328125,.5546875,.5546875,.5546875,.5546875,.3328125,.5,.2765625,.5546875,.5,.721875,.5,.5,.5,.3546875,.259375,.353125,.5890625];const avg=.5279276315789471;String.prototype.width=function(font){return Array.from(this).reduce((acc,cur)=>acc+(widths[cur.charCodeAt(0)]??avg),0)*(font||12)};function createGuid(){function S4(){return((1+Math.random())*65536|0).toString(16).substring(1)}return(S4()+S4()+"-"+S4()+"-4"+S4().substr(0,3)+"-"+S4()+"-"+S4()+S4()+S4()).toLowerCase()}const ChartTypes=Object.freeze({plot:0,circular:1});const CircularTypes=Object.freeze({pie:0});const AnimationTypes=Object.freeze({mouseover:0,mouseleave:1,init:2,click:3});class DynSettings{renderer;constructor(chart,settings){switch(settings.type){case ChartTypes.plot:this.renderer=new PlotRenderer(chart,settings,this);break;case ChartTypes.circular:this.renderer=new CircularRenderer(chart,settings,this);break}}}class ChartSettings{data;type}class ChartProperties{static chart="chart"}class BasePoint{id;color;label;disabled}class Data{values}class Renderer{node;canvas;settings;dynSettings;chart;animations;constructor(chart,settings,dynSettings){this.node=chart.node;this.settings=settings;this.dynSettings=dynSettings;this.chart=chart;this.animations=new Animations;this.canvas=document.createElement("canvas");this.canvas.width=1600;this.canvas.height=1e3;this.node.append(this.canvas)}render(){}destroy(){throw new Error("Method not implemented")}}class CircularRenderer extends Renderer{#isInit=false;#canvasPosition;#center;#radius;#sum;#accumulator;#onMouseMoveEvent;#onClickEvent;#startAngle;#currentHover;#isHover;#pinned;#angles;data;#startPoint;constructor(chart,settings,dynSettings){super(chart,settings,dynSettings);this.data=this.chart.data;for(const value of this.data.values)value.current=value.value}render(){if(!this.#isInit){super.render();const shortSide=this.canvas.width>this.canvas.height?this.canvas.height:this.canvas.width;this.#center={x:this.canvas.width/2,y:this.canvas.height/2};this.#startAngle=Math.random()%(Math.PI*2);this.#radius=shortSide/3;this.#pinned=[];this.#initAnimations()}this.#accumulator=this.#startAngle;this.#isHover=false;this.canvas.style.cursor="default";if(this.data.values.filter(v=>!v.disabled).length===0)this.#drawEmpty();else this.#draw();if(!this.#isInit)this.canvas.dispatchEvent(new MouseEvent("mousemove"));this.#isInit=true}#draw(){if(this.animations.any()||this.#onMouseMoveEvent||!!this.#isInit===false){this.#sum=this.data.values.reduce((acc,v)=>acc+v.current,0);let anglesSum=this.#startAngle;this.#angles=this.data.values.flatMap(sector=>{const angle=sector.current/this.#sum*2*Math.PI;return{id:sector.id,value:angle,sum:(anglesSum+=angle)-angle}}).reverse();const ctx=this.canvas.getContext("2d");ctx.clearRect(0,0,this.canvas.width,this.canvas.height);this.#startPoint={x:this.#center.x+this.#radius*Math.cos(this.#startAngle),y:this.#center.y+this.#radius*Math.sin(this.#startAngle)};for(const value of this.data.values)this.#drawSector(value);if(this.#onMouseMoveEvent)for(const value of this.data.values)this.#drawTooltip(value)}requestAnimationFrame(this.render.bind(this))}#drawSector(value,isInner=false){const ctx=this.canvas.getContext("2d");const piece=value.current/this.#sum,angle=(isNaN(piece)?1:piece)*2*Math.PI;const isSingle=this.data.values.filter(s=>!s.disabled).length===1;ctx.fillStyle=value.color;ctx.shadowBlur=null;ctx.shadowColor=null;if(!isInner&&!value.disabled){let labelStartPoint={x:this.#center.x+(this.#radius+25)*Math.cos(this.#accumulator+angle/2),y:this.#center.y+(this.#radius+25)*Math.sin(this.#accumulator+angle/2)};let labelMidPoint={x:this.#center.x+(this.#radius+50)*Math.cos(this.#accumulator+angle/2),y:this.#center.y+(this.#radius+50)*Math.sin(this.#accumulator+angle/2)};const dir=labelStartPoint.x>this.#center.x?1:-1;let endPoint={x:labelMidPoint.x+40*dir,y:labelMidPoint.y};let isBusy=false;const textWidth=value.label.width(18),imageDataX=dir===1?endPoint.x+10:endPoint.x-textWidth-10,imageData=new Uint32Array(ctx.getImageData(imageDataX,endPoint.y-12,textWidth,24).data.buffer);for(let i=0;i<imageData.length;i++){if(imageData[i]&4278190080){isBusy=true;break}}if(!isBusy){ctx.beginPath();ctx.moveTo(labelStartPoint.x,labelStartPoint.y);ctx.quadraticCurveTo(labelMidPoint.x,labelMidPoint.y,endPoint.x,endPoint.y);ctx.strokeStyle="#000000";ctx.stroke();ctx.fillStyle="#000000";ctx.textAlign=dir===1?"start":"end";ctx.font="18px serif";ctx.fillText(value.label,endPoint.x+10*dir,endPoint.y+4)}}let point2={x:this.#center.x+this.#radius*Math.cos(this.#accumulator+angle),y:this.#center.y+this.#radius*Math.sin(this.#accumulator+angle)};if(!isInner&&(!this.#isInit||this.animations.contains(value,AnimationTypes.init))){this.animations.add(value,AnimationTypes.init,{timer:new Date,duration:125+(this.chart.data.values.indexOf(value)+1)/this.chart.data.values.length*175,before:(item,passed,duration)=>{return passed<=duration},body:(passed,duration)=>{if(passed>duration)passed=duration;const transition=passed/duration;const centerOfSector={x:this.#center.x+this.#radius/2*Math.cos(this.#accumulator+angle/2),y:this.#center.y+this.#radius/2*Math.sin(this.#accumulator+angle/2)};const minSize=.7,rest=1-minSize;ctx.translate(centerOfSector.x-centerOfSector.x*(minSize+transition*rest),centerOfSector.y-centerOfSector.y*(minSize+transition*rest));ctx.scale(minSize+transition*rest,minSize+transition*rest);let opacity=Math.round(255*transition).toString(16);if(opacity.length<2)opacity=0+opacity;this.#drawSector({value:value.value,current:value.current,color:value.color+opacity,label:value.label,id:value.id,disabled:value.disabled},true);ctx.resetTransform()}})}if(!!this.#onClickEvent&&!isInner&&!this.animations.contains(value,AnimationTypes.init)&&!isSingle){this.animations.add(value,AnimationTypes.click,{timer:null,duration:100,before:()=>{if(!!this.#onClickEvent){if(this.#isInsideSector(this.#onClickEvent,value)){if(this.#pinned.includes(value.id))this.#pinned=this.#pinned.filter(id=>id!==value.id);else this.#pinned.push(value.id);this.#onClickEvent=new PointerEvent("click")}}},body:()=>{if(!this.#pinned.includes(value.id))return;let direction=this.#accumulator+angle/2;const transition={x:20*Math.cos(direction),y:20*Math.sin(direction)};ctx.translate(transition.x,transition.y);this.#drawSector(value,true);ctx.resetTransform()}})}if(this.#onMouseMoveEvent&&this.#isInsideSector(this.#onMouseMoveEvent,value)){this.#currentHover=value.id;this.#isHover=true}if(this.#onMouseMoveEvent&&!isInner&&!this.animations.contains(value,AnimationTypes.init)&&!this.#pinned.includes(value.id)&&!isSingle){this.animations.add(value,AnimationTypes.mouseleave,{timer:null,duration:100,before:()=>{return!this.#isInsideSector(this.#onMouseMoveEvent,value)},body:(passed,duration)=>{let direction=this.#accumulator+angle/2;if(passed>duration||this.#currentHover===undefined)passed=duration;const transition={x:20*Math.cos(direction)*(1-passed/duration),y:20*Math.sin(direction)*(1-passed/duration)};ctx.translate(transition.x,transition.y);this.#drawSector({value:value.value,current:value.current,color:adjustColor(value.color,Math.round(33*(1-passed/duration))),label:value.label,id:value.id,disabled:value.disabled},true);ctx.resetTransform()}});this.animations.add(value,AnimationTypes.mouseover,{timer:null,duration:100,before:()=>{return this.#isInsideSector(this.#onMouseMoveEvent,value)},body:(passed,duration)=>{const actualPiece=value.current/this.#sum,actualAngle=(isNaN(actualPiece)?1:actualPiece)*2*Math.PI;this.animations.reload(value,AnimationTypes.mouseleave);this.canvas.style.cursor="pointer";let direction=this.#accumulator+actualAngle/2;if(passed>duration)passed=duration;const transition={x:20*Math.cos(direction)*(passed/duration),y:20*Math.sin(direction)*(passed/duration)};ctx.translate(transition.x,transition.y);this.#drawSector({value:value.value,current:value.current,color:adjustColor(value.color,Math.round(33*passed/duration)),label:value.label,id:value.id,disabled:value.disabled},true);ctx.resetTransform()}})}if((isInner||isSingle)&&angle>0){ctx.beginPath();ctx.moveTo(this.#center.x,this.#center.y);ctx.lineTo(this.#startPoint.x,this.#startPoint.y);let localAccumulator=0,localAngle=angle;while(localAngle>0){let currentAngle=localAngle-Math.PI/6>0?Math.PI/6:localAngle;point2={x:this.#center.x+this.#radius*Math.cos(this.#accumulator+localAccumulator+currentAngle),y:this.#center.y+this.#radius*Math.sin(this.#accumulator+localAccumulator+currentAngle)};const tangentIntersectionAngle=Math.PI-currentAngle;const lengthToTangentIntersection=this.#radius/Math.sin(tangentIntersectionAngle/2);const tangentIntersectionPoint={x:this.#center.x+lengthToTangentIntersection*Math.cos(this.#accumulator+localAccumulator+currentAngle/2),y:this.#center.y+lengthToTangentIntersection*Math.sin(this.#accumulator+localAccumulator+currentAngle/2)};ctx.quadraticCurveTo(tangentIntersectionPoint.x,tangentIntersectionPoint.y,point2.x,point2.y);localAccumulator+=currentAngle;localAngle-=Math.PI/6}ctx.closePath();ctx.fillStyle=value.color;ctx.strokeStyle=value.color;ctx.fill();ctx.stroke();this.#accumulator+=angle}this.#startPoint=point2}#drawTooltip(value){const ctx=this.canvas.getContext("2d");let x=this.#onMouseMoveEvent.clientX-this.#canvasPosition.x,y=this.#onMouseMoveEvent.clientY+window.scrollY;if(this.#currentHover===value.id&&this.#isHover){const text=`${value.label}: ${value.current.toPrecision(2)}`;ctx.beginPath();ctx.roundRect(x+=10,y+=10,text.width(18)+18,38,20);ctx.fillStyle="#00000077";ctx.shadowColor="#00000077";ctx.shadowBlur=20;ctx.fill();ctx.fillStyle="#ffffff";ctx.font="18px serif";ctx.textAlign="start";ctx.fillText(text,x+15,y+25)}}#initAnimations(){this.#canvasPosition=this.canvas.getBoundingClientRect();this.#canvasPosition.x+=window.scrollX;this.#canvasPosition.y+=window.scrollY;this.canvas.onmousemove=event=>this.#onMouseMoveEvent=event;this.canvas.onclick=event=>this.#onClickEvent=event}#isInsideSector(event,value){const isAngle=point=>{let a=Math.atan2(point.y-this.#center.y,point.x-this.#center.x);if(a<0)a+=Math.PI*2;if(a<this.#startAngle)a=Math.PI*2-Math.abs(this.#startAngle-a)+this.#startAngle;let index=this.#angles.findIndex(o=>o.id===value.id);let sumBefore=this.#angles[index].sum;return sumBefore<=a&&sumBefore+this.#angles[index].value-a>=0};const isWithinRadius=v=>{return v.x*v.x+v.y*v.y<=this.#radius*this.#radius};let x=event.clientX-this.#canvasPosition.x+window.scrollX,y=event.clientY-this.#canvasPosition.y+window.scrollY;let point={x:x,y:y};return isAngle(point)&&isWithinRadius({x:point.x-this.#center.x,y:point.y-this.#center.y})}#drawEmpty(){const ctx=this.canvas.getContext("2d");ctx.clearRect(0,0,this.#canvasPosition.width,this.#canvasPosition.height);ctx.closePath();ctx.beginPath();ctx.arc(this.#center.x,this.#center.y,this.#radius,0,2*Math.PI);ctx.strokeStyle="#000000";ctx.stroke();ctx.font="18px serif";ctx.textAlign="center";ctx.textBaseline="middle";ctx.fillStyle="#000000";ctx.fillText("All data is hidden",this.#center.x,this.#center.y);requestAnimationFrame(this.render.bind(this))}destroy(){super.destroy()}}class PlotRenderer extends Renderer{}class Sector extends BasePoint{value;current}class Point{x;y}class CircularData extends Data{type;values}class Legend{canvas;chart;animations;#canvasPosition;#onMouseMoveEvent;#onClickEvent;#globalTimer;#isInit=false;constructor(chart){this.chart=chart;this.canvas=document.createElement("canvas");this.canvas.width=1600;this.canvas.height=200;chart.node.append(this.canvas);this.#globalTimer=new Date;this.animations=new Animations}render(){if(!this.#isInit)this.#initInteractions();const ctx=this.canvas.getContext("2d");ctx.clearRect(0,0,this.canvas.width,this.canvas.height);let nextPoint={x:20,y:20};this.canvas.style.cursor="default";for(const value of this.chart.data.values){nextPoint=this.#draw(value,nextPoint.x,nextPoint.y)}requestAnimationFrame(this.render.bind(this));if(!this.#isInit)this.canvas.dispatchEvent(new MouseEvent("mousemove"));this.#isInit=true}#draw(value,x,y){const ctx=this.canvas.getContext("2d");const textWidth=value.label.width(18),circleRadius=10;if(x+50+textWidth>=this.canvas.width){x=20;y+=38}let rectX=x-circleRadius-circleRadius,rectY=y-circleRadius/2-circleRadius,rectW=circleRadius+circleRadius+20+textWidth,rectH=circleRadius+circleRadius+circleRadius;const isHover=event=>{const px=event.clientX-this.#canvasPosition.x+window.scrollX,py=event.clientY-this.#canvasPosition.y+window.scrollY;return px>=rectX&&px<=rectX+rectW&&py>=rectY&&py<=rectY+rectH};if(this.#onClickEvent){this.animations.add(value,AnimationTypes.click,{timer:null,duration:220,continuous:true,before:()=>{return isHover(this.#onClickEvent)},body:(passed,duration)=>{if(passed>duration)passed=duration;if(passed===0)value.disabled=!value.disabled;if(value.disabled)value.current=value.value*(1-passed/duration);else value.current=value.value*passed/duration;if(passed===duration)this.#onClickEvent=new PointerEvent("click")}})}if(this.#onMouseMoveEvent){this.animations.add(value,AnimationTypes.mouseleave,{timer:null,duration:100,before:()=>{return!isHover(this.#onMouseMoveEvent)&&!this.#isInit},body:(passed,duration)=>{if(passed>duration)passed=duration;ctx.beginPath();ctx.roundRect(rectX,rectY,rectW,rectH,circleRadius);ctx.fillStyle=adjustColor("#ffffff",Math.round(-50*(1-passed/duration)));ctx.fill();this.canvas.style.cursor="pointer"}});this.animations.add(value,AnimationTypes.mouseover,{timer:null,duration:100,before:()=>{return isHover(this.#onMouseMoveEvent)},body:(passed,duration)=>{if(passed>duration)passed=duration;ctx.beginPath();ctx.roundRect(rectX,rectY,rectW,rectH,circleRadius);ctx.fillStyle=adjustColor("#ffffff",Math.round(-50*passed/duration));ctx.fill();this.canvas.style.cursor="pointer"}})}ctx.beginPath();ctx.arc(x,y,circleRadius,0,2*Math.PI);ctx.fillStyle=value.disabled?grayScale(value.color):value.color;ctx.fill();ctx.fillStyle="#000000";ctx.font="18px serif";ctx.fillText(value.label,x+=20,y+4);if(value.disabled){ctx.beginPath();ctx.moveTo(x-5,y);ctx.lineTo(x+textWidth,y);ctx.stroke()}x+=textWidth+45;return{x:x,y:y}}#initInteractions(){this.#canvasPosition=this.canvas.getBoundingClientRect();this.#canvasPosition.x+=window.scrollX;this.#canvasPosition.y+=window.scrollY;this.canvas.onmousemove=event=>this.#onMouseMoveEvent=event;this.canvas.onclick=event=>this.#onClickEvent=event}destroy(){throw new Error("Method not implemented")}}class Chart{node;data;#settings;#dynSettings;#legend;constructor(context,settings){context[ChartProperties.chart]=this;this.node=context;this.data=settings.data;this.#settings=settings;this.#prepareSettings();this.#dynSettings=new DynSettings(this,this.#settings);this.#legend=new Legend(this);if(this.#legend){this.#dynSettings.renderer.canvas.height-=200;this.#legend.canvas.width=this.#dynSettings.renderer.canvas.width>this.#dynSettings.renderer.canvas.height?this.#dynSettings.renderer.canvas.height:this.#dynSettings.renderer.canvas.width}}render(){this.#dynSettings.renderer.render();this.#legend.render()}destroy(){}#prepareSettings(){for(let item of this.#settings.data.values)item.id=createGuid()}}class AnimationItem{timer;before;body;duration;inProgress;continuous}class Animations{#queue;constructor(){this.#queue=new Map}add(object,type,value){const key=this.#getKey(object,type);if(!this.#queue.has(key))this.#queue.set(key,value);this.#process(key)}delete(object,type){this.#queue.delete(this.#getKey(object,type))}contains(object,type){return this.#queue.has(this.#getKey(object,type))}any(){return this.#queue.size>0}reload(object,type){if(this.contains(object,type)){let item=this.#queue.get(this.#getKey(object,type));item.timer=new Date}}#process(key){let item=this.#queue.get(key);const stamp=new Date,passed=stamp-(item.timer??stamp);const before=item.before(item,passed,item.duration)??true;if(!item.timer&&before)item.timer=new Date;if(before||item.inProgress&&item.continuous){item.body(passed,item.duration);item.inProgress=true}if(passed>=item.duration&&(!before||item.continuous)){this.#queue.delete(key);item.inProgress=false}}#getKey(object,type){return object.id+type}}